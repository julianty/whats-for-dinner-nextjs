// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RestaurantTag {
  VEGETARIAN
  VEGAN
}

enum PriceRating {
  ONE
  TWO
  THREE
}

model Restaurant {
  id          String   @id @default(uuid())
  userCreated Boolean
  name        String
  description String?
  imageUrl    String?
  userRating  Float @default(-1)
  priceRating PriceRating
  tags        RestaurantTag[]
  sessions    Session[] // Many-to-many with Session
  choices     SessionChoice[]
}

model User {
  id    String @id @default(uuid())
  name  String
  sessions SessionUser[]
  email String
  userEntries String[]
  choices    SessionChoice[]
}

model Session {
  id                String   @id @default(uuid())
  access_with_link  Boolean  @default(true)
  users             SessionUser[]
  restaurants       Restaurant[]
  customEntries     String[]
  choices            SessionChoice[]
}

model SessionUser {
  id        String   @id @default(uuid())
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  @@unique([sessionId, userId])
}

model SessionChoice {
  id            String      @id @default(uuid())
  session       Session     @relation(fields: [sessionId], references: [id])
  sessionId     String
  user          User?       @relation(fields: [userId], references: [id])
  userId        String?     // Nullable for guests
  guestName     String?     // For guest users
  restaurant    Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId  String?     // Nullable if it's a custom entry
  customEntry   String?     // For custom entries
  choice        Boolean     // The user's choice (true/false)
  createdAt     DateTime    @default(now())

  @@index([sessionId])
  @@index([userId])
  @@index([restaurantId])

  // Uniqueness for users and restaurants
  @@unique([sessionId, userId, restaurantId])
  // Uniqueness for guests and restaurants
  @@unique([sessionId, guestName, restaurantId])
  // Uniqueness for users and custom entries
  @@unique([sessionId, userId, customEntry])
  // Uniqueness for guests and custom entries
  @@unique([sessionId, guestName, customEntry])
}